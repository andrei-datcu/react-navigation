{"version":3,"sources":["TabBarIcon.tsx"],"names":["TabBarIcon","activeOpacity","inactiveOpacity","activeTintColor","inactiveTintColor","renderIcon","size","style","styles","icon","opacity","focused","color","StyleSheet","create","position","alignSelf","alignItems","justifyContent","height","width","minWidth"],"mappings":";;;;;;;AAAA;;AACA;;;;AAkBe,SAASA,UAAT,CAAoB;AACjCC,EAAAA,aADiC;AAEjCC,EAAAA,eAFiC;AAGjCC,EAAAA,eAHiC;AAIjCC,EAAAA,iBAJiC;AAKjCC,EAAAA,UALiC;AAMjCC,EAAAA,IANiC;AAOjCC,EAAAA;AAPiC,CAApB,EAQL;AACR;AACA;AACA,sBACE,6BAAC,iBAAD;AAAM,IAAA,KAAK,EAAEA;AAAb,kBACE,6BAAC,iBAAD;AAAM,IAAA,KAAK,EAAE,CAACC,MAAM,CAACC,IAAR,EAAc;AAAEC,MAAAA,OAAO,EAAET;AAAX,KAAd;AAAb,KACGI,UAAU,CAAC;AACVM,IAAAA,OAAO,EAAE,IADC;AAEVL,IAAAA,IAFU;AAGVM,IAAAA,KAAK,EAAET;AAHG,GAAD,CADb,CADF,eAQE,6BAAC,iBAAD;AAAM,IAAA,KAAK,EAAE,CAACK,MAAM,CAACC,IAAR,EAAc;AAAEC,MAAAA,OAAO,EAAER;AAAX,KAAd;AAAb,KACGG,UAAU,CAAC;AACVM,IAAAA,OAAO,EAAE,KADC;AAEVL,IAAAA,IAFU;AAGVM,IAAAA,KAAK,EAAER;AAHG,GAAD,CADb,CARF,CADF;AAkBD;;AAED,MAAMI,MAAM,GAAGK,wBAAWC,MAAX,CAAkB;AAC/BL,EAAAA,IAAI,EAAE;AACJ;AACA;AACA;AACAM,IAAAA,QAAQ,EAAE,UAJN;AAKJC,IAAAA,SAAS,EAAE,QALP;AAMJC,IAAAA,UAAU,EAAE,QANR;AAOJC,IAAAA,cAAc,EAAE,QAPZ;AAQJC,IAAAA,MAAM,EAAE,MARJ;AASJC,IAAAA,KAAK,EAAE,MATH;AAUJ;AACAC,IAAAA,QAAQ,EAAE;AAXN;AADyB,CAAlB,CAAf","sourcesContent":["import React from 'react';\r\nimport { View, StyleSheet, StyleProp, ViewStyle } from 'react-native';\r\nimport type { Route } from '@react-navigation/native';\r\n\r\ntype Props = {\r\n  route: Route<string>;\r\n  size: number;\r\n  activeOpacity: number;\r\n  inactiveOpacity: number;\r\n  activeTintColor: string;\r\n  inactiveTintColor: string;\r\n  renderIcon: (props: {\r\n    focused: boolean;\r\n    color: string;\r\n    size: number;\r\n  }) => React.ReactNode;\r\n  style: StyleProp<ViewStyle>;\r\n};\r\n\r\nexport default function TabBarIcon({\r\n  activeOpacity,\r\n  inactiveOpacity,\r\n  activeTintColor,\r\n  inactiveTintColor,\r\n  renderIcon,\r\n  size,\r\n  style,\r\n}: Props) {\r\n  // We render the icon twice at the same position on top of each other:\r\n  // active and inactive one, so we can fade between them.\r\n  return (\r\n    <View style={style}>\r\n      <View style={[styles.icon, { opacity: activeOpacity }]}>\r\n        {renderIcon({\r\n          focused: true,\r\n          size,\r\n          color: activeTintColor,\r\n        })}\r\n      </View>\r\n      <View style={[styles.icon, { opacity: inactiveOpacity }]}>\r\n        {renderIcon({\r\n          focused: false,\r\n          size,\r\n          color: inactiveTintColor,\r\n        })}\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  icon: {\r\n    // We render the icon twice at the same position on top of each other:\r\n    // active and inactive one, so we can fade between them:\r\n    // Cover the whole iconContainer:\r\n    position: 'absolute',\r\n    alignSelf: 'center',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    height: '100%',\r\n    width: '100%',\r\n    // Workaround for react-native >= 0.54 layout bug\r\n    minWidth: 25,\r\n  },\r\n});\r\n"]}