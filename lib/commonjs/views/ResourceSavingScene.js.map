{"version":3,"sources":["ResourceSavingScene.tsx"],"names":["FAR_FAR_AWAY","ResourceSavingScene","React","Component","render","props","isVisible","children","style","rest","styles","container","Platform","OS","display","attached","detached","StyleSheet","create","flex","overflow","top"],"mappings":";;;;;;;AAAA;;AACA;;;;;;;;;;;;AASA,MAAMA,YAAY,GAAG,KAArB,C,CAA4B;;AAEb,MAAMC,mBAAN,SAAkCC,KAAK,CAACC,SAAxC,CAAyD;AACtEC,EAAAA,MAAM,GAAG;AACP,wBAAgD,KAAKC,KAArD;AAAA,UAAM;AAAEC,MAAAA,SAAF;AAAaC,MAAAA,QAAb;AAAuBC,MAAAA;AAAvB,KAAN;AAAA,UAAuCC,IAAvC;;AAEA,wBACE,oBAAC,iBAAD;AACE,MAAA,KAAK,EAAE,CACLC,MAAM,CAACC,SADF,EAELC,sBAASC,EAAT,KAAgB,KAAhB,GACI;AAAEC,QAAAA,OAAO,EAAER,SAAS,GAAG,MAAH,GAAY;AAAhC,OADJ,GAEI,IAJC,EAKLE,KALK,CADT;AAQE,MAAA,WAAW,EAAE,KARf;AASE,MAAA,qBAAqB,EACnB;AACA;AACAI,4BAASC,EAAT,KAAgB,KAAhB,GAAwB,CAACP,SAAzB,GAAqC,IAZzC;AAcE,MAAA,aAAa,EAAEA,SAAS,GAAG,MAAH,GAAY;AAdtC,OAeMG,IAfN,gBAiBE,oBAAC,iBAAD;AAAM,MAAA,KAAK,EAAEH,SAAS,GAAGI,MAAM,CAACK,QAAV,GAAqBL,MAAM,CAACM;AAAlD,OACGT,QADH,CAjBF,CADF;AAuBD;;AA3BqE;;;;AA8BxE,MAAMG,MAAM,GAAGO,wBAAWC,MAAX,CAAkB;AAC/BP,EAAAA,SAAS,EAAE;AACTQ,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,QAAQ,EAAE;AAFD,GADoB;AAK/BL,EAAAA,QAAQ,EAAE;AACRI,IAAAA,IAAI,EAAE;AADE,GALqB;AAQ/BH,EAAAA,QAAQ,EAAE;AACRG,IAAAA,IAAI,EAAE,CADE;AAERE,IAAAA,GAAG,EAAErB;AAFG;AARqB,CAAlB,CAAf","sourcesContent":["import * as React from 'react';\r\nimport { Platform, StyleSheet, View } from 'react-native';\r\n// eslint-disable-next-line import/no-unresolved\r\n\r\ntype Props = {\r\n  isVisible: boolean;\r\n  children: React.ReactNode;\r\n  style?: any;\r\n};\r\n\r\nconst FAR_FAR_AWAY = 30000; // this should be big enough to move the whole view out of its container\r\n\r\nexport default class ResourceSavingScene extends React.Component<Props> {\r\n  render() {\r\n    const { isVisible, children, style, ...rest } = this.props;\r\n\r\n    return (\r\n      <View\r\n        style={[\r\n          styles.container,\r\n          Platform.OS === 'web'\r\n            ? { display: isVisible ? 'flex' : 'none' }\r\n            : null,\r\n          style,\r\n        ]}\r\n        collapsable={false}\r\n        removeClippedSubviews={\r\n          // On iOS, set removeClippedSubviews to true only when not focused\r\n          // This is an workaround for a bug where the clipped view never re-appears\r\n          Platform.OS === 'ios' ? !isVisible : true\r\n        }\r\n        pointerEvents={isVisible ? 'auto' : 'none'}\r\n        {...rest}\r\n      >\r\n        <View style={isVisible ? styles.attached : styles.detached}>\r\n          {children}\r\n        </View>\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    overflow: 'hidden',\r\n  },\r\n  attached: {\r\n    flex: 1,\r\n  },\r\n  detached: {\r\n    flex: 1,\r\n    top: FAR_FAR_AWAY,\r\n  },\r\n});\r\n"]}